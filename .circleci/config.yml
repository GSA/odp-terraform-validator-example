version: 2.1

# First we will define the jobs that are used in the workflows.
# 
# Workflows can be found at the bottom of this file.  They specify
# what order the jobs run in and what depends on what.

commands:
  set-gcp-init-vars:
    description: "Create the service account json file for authentication,and set the project id from CircleCI variables."
    steps:
      - run:
          name: set up job variables and key
          command: |
            echo $(env | grep -E "^GCLOUD_SERVICE_KEY_${CIRCLE_BRANCH}=" | sed "s/^GCLOUD_SERVICE_KEY_${CIRCLE_BRANCH}=//") > ${HOME}/gcloud-service-key.json
            export GOOGLE_PROJECT_ID=$(env | awk -F= "/^GOOGLE_PROJECT_ID_${CIRCLE_BRANCH}=/ {print \$2}")
            echo "export GOOGLE_PROJECT_ID='$GOOGLE_PROJECT_ID'" >> $BASH_ENV
  environment_vars:
    description: "Setup environment variables."
    parameters:
      steps:
      - run:
          name: Run Terraform commands.
          command: |
            #Load CIRCLE  environment variables as bash environment variables
            . "${BASH_ENV}"
            export TF_VAR_project_id=${GOOGLE_PROJECT_ID}
            export TF_VAR_environment=${CIRCLE_BRANCH}
            export TF_VAR_notification_email="$NOTIFICATION_EMAIL"            
            export TF_VAR_cloudsql_db_name="${CLOUDSQL_DB}"
            export TF_VAR_cloudsql_username="${CLOUDSQL_USERNAME}"
            export TF_VAR_cloudsql_password="${CLOUDSQL_PASSWORD}"
            export TF_VAR_default_firewall_rule="${DEFAULT_FIREWALL_RULE}"
  terraform:
    description: "Run Terraform commands."
    parameters:
      command:
        type: string
        default: "validate"
    steps:
      - run:
          name: Run Terraform commands.
          command: |
            cd ${CIRCLE_BRANCH} && terraform init -backend-config="bucket=${STATE_BUCKET}" && terraform << parameters.to >> -input=false          
jobs: 

  gcp_setup:
    docker:
      - image: google/cloud-sdk
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - set-gcp-init-vars
      - install-gcp-sdk-nongoogle
      - run:
          name: create terraform state bucket
          command: |
            gsutil mb gs://gcp-terraform-state-$GOOGLE_PROJECT_ID || true
  terraform:
    docker:
      - image: hashicorp/terraform:latest
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - set-gcp-init-vars

      - run:
          name: create terraform state bucket
          command: |
            gsutil mb gs://gcp-terraform-state-$GOOGLE_PROJECT_ID || true

 

#These are the workflows that define what CircleCI actually does.
workflows:
  version: 2.1
  terraform_example:
    jobs:
      - gcp_setup
      - terraform:
          requires:
            - gcp_setup          
