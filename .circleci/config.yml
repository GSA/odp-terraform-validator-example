version: 2.1

# First we will define the jobs that are used in the workflows.
# 
# Workflows can be found at the bottom of this file.  They specify
# what order the jobs run in and what depends on what.

commands:
  init-gcp:
    description: "Create the service account json file for authentication, and any other GCP functions for project setup."
    steps:
      - run:
          name: Create access key file for service account 
          command: |
            . ${BASH_ENV}
            echo $(env | grep -E "^GCLOUD_SERVICE_KEY_${CIRCLE_BRANCH}=" | sed "s/^GCLOUD_SERVICE_KEY_${CIRCLE_BRANCH}=//") > ${HOME}/gcloud-service-key.json
            
  prepare-terraform-bucket:
    description: "Create the service account json file for authentication,and set the project id from CircleCI variables."
    steps:
      - run:
          name: Create terraform bucket
          command: |
            . ${BASH_ENV}
            env
            gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            echo $GOOGLE_PROJECT_ID 
            gcloud config set project $GOOGLE_PROJECT_ID   
            gsutil mb gs://${STATE_BUCKET} || true            
  setup-environment-vars:
    description: "Setup environment variables."
    steps:
      - run:
          name: Export required environment variables.
          command: |
            cat \<<EOF >> $BASH_ENV
            #GCP Specific vars
            export GOOGLE_PROJECT_ID=$(env | awk -F= "/^GOOGLE_PROJECT_ID_${CIRCLE_BRANCH}=/ {print \$2}")
            #Terraform backend variables
            export STATE_BUCKET=tf-${GOOGLE_PROJECT_ID}-${CIRCLE_PROJECT_REPONAME}
            export STATE_PREFIX=terraform/state/odp-tf-validator-example-${CIRCLE_BRANCH}
            #Terraform backend variables
            export TF_VAR_project_id=${GOOGLE_PROJECT_ID}
            export TF_VAR_environment=${CIRCLE_BRANCH}
            export TF_VAR_cloudsql_db_name="${CLOUDSQL_DB}"
            export TF_VAR_cloudsql_username="${CLOUDSQL_USERNAME}"
            export TF_VAR_cloudsql_password="${CLOUDSQL_PASSWORD}"
            EOF
            env

  run-terraform:
    description: "Run Terraform commands."
    parameters:
      command:
        type: string
        default: "validate"
    steps:
      - run:
          name: Run Terraform commands.
          command: |
            . ${BASH_ENV}
            echo "State bucket = ${STATE_BUCKET}"
            cd ${CIRCLE_BRANCH} && terraform init -backend-config="bucket=${STATE_BUCKET} prefix=${STATE_PREFIX}" && terraform << parameters.command >> -input=false          
jobs: 

  setup:
    docker:
      - image: google/cloud-sdk
    steps:
      - setup-environment-vars
      - init-gcp      
      - prepare-terraform-bucket

  terraform:
    docker:
      - image: hashicorp/terraform:latest
    steps:
      #- setup-environment-vars
      - init-gcp       
      - run-terraform:
        command: validate
      - run-terraform:
        command: plan
      - run-terraform:
        command: apply        

 

#These are the workflows that define what CircleCI actually does.
workflows:
  version: 2.1
  terraform_example:
    jobs:
      - setup
      - terraform:
          requires:
            - gcp_setup          
